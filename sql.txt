drop database if exists ssafit;
create database ssafit;

use ssafit;

drop table if exists `user`;
create table `user` (
    `user_id` varchar(20) not null,
    `user_password` varchar(20) not null,
    `name` varchar(30) not null,
    `nickname` varchar(30) not null,
    `favorite` varchar(30),
    `experience` int default 0,
    `reg_date` timestamp default now(),
    -- `profile_image` longblob,
    primary key(user_id)
    );
    
insert into `user`(user_id,user_password, `name`, nickname, favorite) values ("id1","1234","김싸피","헬린이","수영");
 
drop table if exists `playlist`;
create table `playlist` (
	`playlist_id` int auto_increment not null,
	`playlist_title` varchar(150) not null,
	`content` varchar(150),
	`tag` varchar(30),
	`user_id` varchar(20) not null,
  `like_cnt` int default 0,
	`created_at` timestamp default now(),
	`edited_at` timestamp default now(),
  `open` int not null default 1, -- public이 자바에서 예약어라 바꿈

  foreign key (user_id) references user (user_id),
  primary key (playlist_id)	
    );

drop table if exists `playlist_like`;
create table `playlist_like`(
	`playlist_id` int not null,
	`user_id` varchar(20) not null,
    `liked_at` timestamp default now(),
	
    foreign key (user_id) references `user`(user_id),
	foreign key (playlist_id) references `playlist`(playlist_id)
);
    
drop table if exists `video`;
create table `video` (
	`video_id` varchar(150) not null,
	`title` varchar(150) not null,
	`thumbnail_path` varchar(150) not null,
	`like_cnt` int not null default 0,
	
	primary key(`video_id`)
	);

drop table if exists `video_like`;
create table `video_like`(
	`video_id` varchar(150) not null,
	`user_id` varchar(20) not null,
	`created_at` timestamp default now(),
	
    foreign key (user_id) references `user`(user_id),
	foreign key (video_id) references `video`(video_id)
);

drop table if exists `video_in_playlist`;
create table `video_in_playlist` (
	`video_id` varchar(150) not null,
	`playlist_id` int not null,
	`created_at` timestamp not null default now(),
	
  foreign key(`video_id`) references video(`video_id`),
	foreign key(`playlist_id`) references playlist(`playlist_id`),
	primary key(`video_id`, `playlist_id`)
);

drop table if exists `comment`;
create table `comment`(
    `comment_id` int auto_increment not null,
	`parent_id` int default -1,
    `playlist_id` int not null,
    `user_id` varchar(20) not null,
    `content` varchar(255),
    `like_cnt` int default 0, -- 좋아요 
    `created_at` timestamp default now(), -- 생성 날짜
	`edited_at` timestamp default now(), -- 수정 날짜

    foreign key (user_id) references `user`(user_id),
    foreign key (playlist_id) references `playlist`(playlist_id),
    primary key (comment_id)
);

drop table if exists `comment_like`;
create table `comment_like`(
    `comment_id` int not null,
    `user_id` varchar(20) not null,
    
    foreign key (user_id) references user(user_id),
	foreign key (comment_id) references `comment`(comment_id)
    );
    
drop table if exists follow;
create table `follow`(
    `follower` varchar(50) not null,
    `following` varchar(50) not null,
    
    foreign key (`follower`) references `user`(user_id),
    foreign key (`following`) references `user`(user_id),
    primary key (`follower`, `following`)
);

